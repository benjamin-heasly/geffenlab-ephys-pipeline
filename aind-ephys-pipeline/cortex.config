params {
    // These four "coordinates" locate the data and results for one session.
    data_root = System.getenv('DATA_ROOT') ?: '/vol/cortex/cd4/geffenlab/data'
    analysis_root = System.getenv('ANALYSIS_ROOT') ?: '/vol/cortex/cd4/geffenlab/analysis'
    subject = System.getenv('SUBJECT_ID') ?: 'AS20-minimal2'
    date = System.getenv('DATE') ?: '03112025'

    // Organize data in and analysis out by subject and date.
    data_path = "${params.data_root}/${params.subject}/${params.date}"
    analysis_path = "${params.analysis_root}/${params.subject}/${params.date}"

    ecephys_path = "${params.data_path}/ecephys/"
    results_path = "${params.analysis_path}/sorted/"

    // Use 10 CPU cores at a time -- not all of them!
    n_jobs = 10

    // Use up to 64GB of memory at a time -- not all of it!
    memory = '64 GB'

    // Choose default parameters for several pipeline steps.
    job_dispatch_args = '--input spikeglx'
    preprocessing_args = '--motion compute --min-duration-for-preprocessing 10'
    nwb_ecephys_args = '--skip-lfp'

    // Choose the default GPU to use for spike sorting.
    // The value like "3" may be a GPU index number or ID string, as from "nvidia-smi -L"
    // The value can be specified on the nextflow command line with --gpu_device <index_or_id>.
    gpu_device = 3

    // Choose some Kilosort4 and SpikeInterface postprocessing parameters in groups, based on brain region.
    // Edit the value value of brain_region below to be one of "default", "cortex", "medulla", or "thalamus".
    // You can also specify the region from the command line with --brain_region <region_name>
    brain_region = "default"
    refractory_period_ms = ['default': '2.0', 'cortex': '2.0', 'medulla': '1.5', 'thalamus': '1.0']
    ks4_universal_threshold = ['default': '9', 'cortex': '9', 'medulla': '9', 'thalamus': '9']
    ks4_learned_threshold = ['default': '8', 'cortex': '8', 'medulla': '8', 'thalamus': '8']

    // Specify spike sorter configuration as JSON.
    // The Kilosort4 settings are documented here:
    //  https://kilosort.readthedocs.io/en/latest/parameters.html
    sorter = 'kilosort4'
    spikesorting_args = """--params '{
        "job_kwargs": {
            "chunk_duration": "1s",
            "progress_bar": false
        },
        "skip_motion_correction": false,
        "min_drift_channels": 96,
        "raise_if_fails": true,
        "clear_cache": false,
        "sorter": {
            "batch_size": 60000,
            "nblocks": 5,
            "Th_universal": ${params.ks4_universal_threshold[params.brain_region]},
            "Th_learned": ${params.ks4_learned_threshold[params.brain_region]},
            "do_CAR": true,
            "invert_sign": false,
            "nt": 61,
            "shift": null,
            "scale": null,
            "artifact_threshold": null,
            "nskip": 25,
            "whitening_range": 32,
            "highpass_cutoff": 300,
            "binning_depth": 5,
            "sig_interp": 20,
            "drift_smoothing": [
                0.5,
                0.5,
                0.5
            ],
            "nt0min": null,
            "dmin": null,
            "dminx": 32,
            "min_template_size": 10,
            "template_sizes": 5,
            "nearest_chans": 10,
            "nearest_templates": 100,
            "max_channel_distance": null,
            "templates_from_data": true,
            "n_templates": 6,
            "n_pcs": 6,
            "Th_single_ch": 6,
            "acg_threshold": 0.2,
            "ccg_threshold": 0.25,
            "cluster_downsampling": 20,
            "x_centers": null,
            "duplicate_spike_ms": 0.25,
            "save_preprocessed_copy": false,
            "torch_device": "auto",
            "bad_channels": null,
            "clear_cache": false,
            "save_extra_vars": false,
            "do_correction": true,
            "keep_good_only": false,
            "skip_kilosort_preprocessing": false,
            "use_binary_file": null,
            "delete_recording_dat": true
        }
    }'"""

    // Specify SpikeInterface postprocesing configuration as JSON.
    // The SpikeInterface postprocessing docs are here:
    //  https://spikeinterface.readthedocs.io/en/stable/modules/postprocessing.html
    postprocessing_args = """--params '{
        {  "job_kwargs": {
            "chunk_duration": "1s",
            "progress_bar": false
        },
        "use_motion_corrected": false,
        "sparsity": {
            "method": "radius",
            "radius_um": 100
        },
        "duplicate_threshold": 0.9,
        "return_scaled": true,
        "random_spikes": {
            "max_spikes_per_unit": 500,
            "method": "uniform",
            "margin_size": null,
            "seed": null
        },
        "noise_levels": {
            "num_chunks_per_segment": 20,
            "chunk_size": 10000,
            "seed": null
        },
        "waveforms": {
            "ms_before": 3.0,
            "ms_after": 4.0,
            "dtype": null
        },
        "templates": {},
        "spike_amplitudes": {
            "peak_sign": "neg"
        },
        "template_similarity": {
            "method": "cosine_similarity"
        },
        "correlograms": {
            "window_ms": 50.0,
            "bin_ms": 1.0
        },
        "isi_histograms": {
            "window_ms": 100.0,
            "bin_ms": 5.0
        },
        "unit_locations": {
            "method": "monopolar_triangulation"
        },
        "spike_locations": {
            "method": "grid_convolution"
        },
        "template_metrics": {
            "upsampling_factor": 10,
            "sparsity": null,
            "include_multi_channel_metrics": true
        },
        "principal_components": {
            "n_components": 5,
            "mode": "by_channel_local",
            "whiten": true
        },
        "quality_metrics_names": [
            "num_spikes",
            "firing_rate",
            "presence_ratio",
            "snr",
            "isi_violation",
            "rp_violation",
            "sliding_rp_violation",
            "amplitude_cutoff",
            "amplitude_median",
            "amplitude_cv",
            "synchrony",
            "firing_range",
            "drift",
            "isolation_distance",
            "l_ratio",
            "d_prime",
            "nearest_neighbor",
            "silhouette"
        ],
        "quality_metrics": {
            "presence_ratio": {
                "bin_duration_s": 60
            },
            "snr": {
                "peak_sign": "neg", 
                "peak_mode": "extremum"
            },
            "isi_violation": {
                "isi_threshold_ms": 1.5, 
                "min_isi_ms": 0
            },
            "rp_violation": {
                "refractory_period_ms": ${params.refractory_period_ms[params.brain_region]}, 
                "censored_period_ms": 0.0
            },
            "sliding_rp_violation": {
                "bin_size_ms": 0.25,
                "window_size_s": 1,
                "exclude_ref_period_below_ms": 0.5,
                "max_ref_period_ms": 10,
                "contamination_values": null
            },
            "amplitude_cutoff": {
                "peak_sign": "neg",
                "num_histogram_bins": 100,
                "histogram_smoothing_value": 3,
                "amplitudes_bins_min_ratio": 5
            },
            "amplitude_median": {
                "peak_sign": "neg"
            },
            "amplitude_cv": {
                "average_num_spikes_per_bin": 50,
                "percentiles": [5, 95],
                "min_num_bins": 10,
                "amplitude_extension": "spike_amplitudes"
            },
            "firing_range": {
                "bin_size_s": 5, 
                "percentiles": [5, 95]
            },
            "synchrony": {
                "synchrony_sizes": [2, 4, 8]
            },
            "nearest_neighbor": {
                "max_spikes": 10000, 
                "n_neighbors": 4
            },
            "nn_isolation": {
                "max_spikes": 10000, 
                "min_spikes": 10, 
                "n_neighbors": 4, 
                "n_components": 10, 
                "radius_um": 100
            },
            "nn_noise_overlap": {
                "max_spikes": 10000, 
                "min_spikes": 10, 
                "n_neighbors": 4, 
                "n_components": 10, 
                "radius_um": 100
            },
            "silhouette": {
                "method": ["simplified"]
            }
        }
    }'""" 
 }

env {
    // Some pipeline code uses these environment variables explicitly (as opposed to using params).
    DATA_PATH=params.ecephys_path
    RESULTS_PATH=params.results_path
}

process {
    debug = true
    executor = 'local'
    cpus = params.n_jobs
    memory = params.memory
    containerOptions = "--env CO_CPUS=${params.n_jobs} --shm-size=4g"

    // change max forks for specific processes to allow multiple forks
    withName: preprocessing {
        maxForks = 1
    }
    withName: spikesort_kilosort4 {
        maxForks = 1
        containerOptions = params.gpu_device == "none" ? "" : "--gpus 'device=${params.gpu_device}'"
    }
    withName: spikesort_kilosort25 {
        maxForks = 1
        containerOptions = params.gpu_device == "none" ? "" : "--gpus 'device=${params.gpu_device}'"
    }
    withName: spikesort_spykingcircus2 {
        maxForks = 1
    }
    withName: postprocessing {
        maxForks = 1
    }
    withName: quality_control {
        maxForks = 1
    }
}

docker {
    enabled = true
    platform = 'linux/amd64'
    runOptions = "--volume ${params.ecephys_path}:/tmp/data"
    envWhitelist = ['KACHERY_ZONE', 'KACHERY_API_KEY']
}

dag {
    enabled = true
    file = "${params.analysis_path}/sorted/nextflow/dag.html"
    overwrite = true
}

report {
    enabled = true
    file = "${params.analysis_path}/sorted/nextflow/report.html"
    overwrite = true
}

timeline {
    enabled = true
    file = "${params.analysis_path}/sorted/nextflow/timeline.html"
    overwrite = true
}

trace {
    enabled = true
    file = "${params.analysis_path}/sorted/nextflow/trace.txt"
    overwrite = true
}
