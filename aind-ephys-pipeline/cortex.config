params {
    // These are "coordinates" that locate raw or processed data for a session.
    raw_data_root = System.getenv('RAW_DATA_ROOT') ?: '/vol/cortex/cd4/geffenlab/raw_data'
    processed_data_root = System.getenv('PROCESSED_DATA_ROOT') ?: '/vol/cortex/cd4/geffenlab/processed_data'
    experimenter = System.getenv('EXPERIMENTER') ?: 'BH'
    subject = System.getenv('SUBJECT_ID') ?: 'AS20-minimal3'
    date = System.getenv('DATE') ?: '03112025'

    // Organize data in and analysis out by subject and date.
    raw_data_path = "${params.raw_data_root}/${params.experimenter}/${params.subject}/${params.date}"
    processed_data_path = "${params.processed_data_root}/${params.experimenter}/${params.subject}/${params.date}"
    ecephys_path = "${params.raw_data_path}/ecephys/"
    results_path = "${params.processed_data_path}/sorted/"

    // Use 10 CPU cores at a time -- not all of them!
    n_jobs = 10

    // Use up to 64GB of memory at a time -- not all of it!
    memory = '64 GB'

    // Choose the default GPU to use for spike sorting.
    // This may be a GPU index, like "0" or "3", or a GPU UUID as from "nvidia-smi -L".
    gpu_device = 3

    // Choose a JSON file of parameters for Kilosort and SpikeInterface.
    params_file = "geffenlab-ephys-pipeline/aind-ephys-pipeline/spikeglx-ks4-default.json"

    // Choose which spike sorter to use: "kilosort4", "kilosort25", or "spykingcircus2".
    sorter = 'kilosort4'
 }

env {
    // Some pipeline code uses these environment variables explicitly (as opposed to using params).
    DATA_PATH=params.ecephys_path
    RESULTS_PATH=params.results_path
}

process {
    debug = true
    executor = 'local'
    cpus = params.n_jobs
    memory = params.memory
    containerOptions = "--env CO_CPUS=${params.n_jobs} --shm-size=4g"

    // change max forks for specific processes to allow multiple forks
    withName: preprocessing {
        maxForks = 1
    }
    withName: spikesort_kilosort4 {
        maxForks = 1
        containerOptions = params.gpu_device == "none" ? "" : "--gpus 'device=${params.gpu_device}'"
    }
    withName: spikesort_kilosort25 {
        maxForks = 1
        containerOptions = params.gpu_device == "none" ? "" : "--gpus 'device=${params.gpu_device}'"
    }
    withName: spikesort_spykingcircus2 {
        maxForks = 1
    }
    withName: postprocessing {
        maxForks = 1
    }
    withName: quality_control {
        maxForks = 1
    }
}

docker {
    enabled = true
    platform = 'linux/amd64'
    runOptions = "--volume ${params.ecephys_path}:/tmp/data"
    envWhitelist = ['KACHERY_ZONE', 'KACHERY_API_KEY']
}

dag {
    enabled = true
    file = "${params.processed_data_path}/sorted/nextflow/dag.html"
    overwrite = true
}

report {
    enabled = true
    file = "${params.processed_data_path}/sorted/nextflow/report.html"
    overwrite = true
}

timeline {
    enabled = true
    file = "${params.processed_data_path}/sorted/nextflow/timeline.html"
    overwrite = true
}

trace {
    enabled = true
    file = "${params.processed_data_path}/sorted/nextflow/trace.txt"
    overwrite = true
}
